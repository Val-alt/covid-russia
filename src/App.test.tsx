import React from 'react'
import { render } from '@testing-library/react'

import App from './App'

const fetch = window.fetch as jest.Mock

const firstRow = [
	'Province/State',
	'Country/Region',
	'Lat',
	'Long',
	'3/1/20',
	'3/2/20',
	'3/3/20',
	'3/4/20',
	'3/5/20',
	'3/6/20',
	'3/7/20',
	'3/8/20',
	'3/9/20',
].join(',')

it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç "–î–∞", –µ—Å–ª–∏ —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç', async () => {
	fetch.mockResolvedValue({
		ok: true,
		text: () =>
			Promise.resolve(
				[
					firstRow,
					[
						'',
						'Russia',
						'60.0',
						'90.0',
						100,
						200,
						300,
						400,
						500,
						1000,
						2000,
						4000,
						8000,
					].join(','),
				].join('\n'),
			),
	})

	const { findByText } = render(<App />)

	await findByText('ü¶†')
	await findByText(/–î–∞/)
	await findByText('9 –º–∞—Ä—Ç–∞ 2020')
})

it('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç "–ù–µ—Ç", –µ—Å–ª–∏ –Ω–µ —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç', async () => {
	fetch.mockResolvedValue({
		ok: true,
		text: () =>
			Promise.resolve(
				[
					firstRow,
					[
						'',
						'Russia',
						'60.0',
						'90.0',
						100,
						200,
						300,
						400,
						500,
						1000,
						2000,
						4000,
						4100,
					].join(','),
				].join('\n'),
			),
	})

	const { findByText } = render(<App />)

	await findByText(/–ù–µ—Ç/)
})

it('–µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏', async () => {
	fetch.mockResolvedValue({ ok: false, status: 404 })

	const { findByText } = render(<App />)

  await findByText(/—á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å/)
})
